

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 07 21:52:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0015                     	;# 
    65     0015                     	;# 
    66     0016                     	;# 
    67     0017                     	;# 
    68     0018                     	;# 
    69     0019                     	;# 
    70     001A                     	;# 
    71     001F                     	;# 
    72     0081                     	;# 
    73     0085                     	;# 
    74     0086                     	;# 
    75     008C                     	;# 
    76     008E                     	;# 
    77     0092                     	;# 
    78     0098                     	;# 
    79     0099                     	;# 
    80     009A                     	;# 
    81     009B                     	;# 
    82     009C                     	;# 
    83     009D                     	;# 
    84     009F                     	;# 
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     008C                     	;# 
   113     008E                     	;# 
   114     0092                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009F                     	;# 
   122     0001                     _TMR0	set	1
   123     0006                     _PORTB	set	6
   124     0005                     _PORTA	set	5
   125     001F                     _CMCON	set	31
   126     005A                     _T0IF	set	90
   127     005D                     _T0IE	set	93
   128     005F                     _GIE	set	95
   129     0086                     _TRISB	set	134
   130     0085                     _TRISA	set	133
   131     040A                     _PS2	set	1034
   132     0409                     _PS1	set	1033
   133     0408                     _PS0	set	1032
   134     040B                     _PSA	set	1035
   135     040D                     _T0CS	set	1037
   136                           
   137                           	psect	cinit
   138     000B                     start_initialization:	
   139                           ; #config settings
   140                           
   141     000B                     __initialization:
   142                           
   143                           ; Clear objects allocated to COMMON
   144     000B  01F0               	clrf	__pbssCOMMON& (0+127)
   145     000C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   146     000D                     end_of_initialization:	
   147                           ;End of C runtime variable initialization code
   148                           
   149     000D                     __end_of__initialization:
   150     000D  0183               	clrf	3
   151     000E  283F               	ljmp	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMMON
   154     0070                     __pbssCOMMON:
   155     0070                     _pwmCounter:
   156     0070                     	ds	2
   157                           
   158                           	psect	cstackCOMMON
   159     0072                     __pcstackCOMMON:
   160     0072                     ?_initialize:
   161     0072                     ?_main:	
   162                           ; 1 bytes @ 0x0
   163                           
   164     0072                     ?_isr:	
   165                           ; 1 bytes @ 0x0
   166                           
   167     0072                     ??_isr:	
   168                           ; 1 bytes @ 0x0
   169                           
   170                           
   171                           ; 1 bytes @ 0x0
   172     0072                     	ds	2
   173     0074                     ??_initialize:
   174     0074                     ??_main:	
   175                           ; 1 bytes @ 0x2
   176                           
   177                           
   178                           	psect	maintext
   179     003F                     __pmaintext:	
   180                           ; 1 bytes @ 0x2
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 40 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, pclath, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : B00/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   200 ;;      Params:         0       0       0       0
   201 ;;      Locals:         0       0       0       0
   202 ;;      Temps:          0       0       0       0
   203 ;;      Totals:         0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels required when called: 2
   206 ;; This function calls:
   207 ;;		_initialize
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213     003F                     _main:	
   214                           ;psect for function _main
   215                           
   216     003F                     l612:	
   217                           ;incstack = 0
   218                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   219                           
   220                           
   221                           ;main.c: 42:     initialize();
   222     003F  200F               	fcall	_initialize
   223     0040                     l38:	
   224                           ;main.c: 44:     while (1){
   225                           
   226     0040                     l39:	
   227                           ;main.c: 45:     }
   228                           
   229     0040  2840               	goto	l38
   230     0041  280A               	ljmp	start
   231     0042                     __end_of_main:
   232                           
   233                           	psect	text1
   234     000F                     __ptext1:	
   235 ;; *************** function _initialize *****************
   236 ;; Defined at:
   237 ;;		line 19 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   251 ;;      Params:         0       0       0       0
   252 ;;      Locals:         0       0       0       0
   253 ;;      Temps:          0       0       0       0
   254 ;;      Totals:         0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used: 1
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		Nothing
   260 ;; This function is called by:
   261 ;;		_main
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     000F                     _initialize:	
   266                           ;psect for function _initialize
   267                           
   268     000F                     l592:	
   269                           ;incstack = 0
   270                           ; Regs used in _initialize: [wreg+status,2]
   271                           
   272                           
   273                           ;main.c: 21:     TRISA = 15;
   274     000F  300F               	movlw	15
   275     0010  1683               	bsf	3,5	;RP0=1, select bank1
   276     0011  1303               	bcf	3,6	;RP1=0, select bank1
   277     0012  0085               	movwf	5	;volatile
   278     0013                     l594:
   279                           
   280                           ;main.c: 22:     TRISB = 0;
   281     0013  0186               	clrf	6	;volatile
   282     0014                     l596:
   283                           
   284                           ;main.c: 24:     CMCON = 7;
   285     0014  3007               	movlw	7
   286     0015  1283               	bcf	3,5	;RP0=0, select bank0
   287     0016  1303               	bcf	3,6	;RP1=0, select bank0
   288     0017  009F               	movwf	31	;volatile
   289                           
   290                           ;main.c: 26:     PORTA = 0;
   291     0018  0185               	clrf	5	;volatile
   292                           
   293                           ;main.c: 27:     PORTB = 0;
   294     0019  0186               	clrf	6	;volatile
   295     001A                     l598:
   296                           
   297                           ;main.c: 28:     GIE = 1;
   298     001A  178B               	bsf	11,7	;volatile
   299     001B                     l600:
   300                           
   301                           ;main.c: 29:     T0IE = 1;
   302     001B  168B               	bsf	11,5	;volatile
   303     001C                     l602:
   304                           
   305                           ;main.c: 30:     T0CS = 0;
   306     001C  1683               	bsf	3,5	;RP0=1, select bank1
   307     001D  1303               	bcf	3,6	;RP1=0, select bank1
   308     001E  1281               	bcf	1,5	;volatile
   309     001F                     l604:
   310                           
   311                           ;main.c: 31:     PSA = 0;
   312     001F  1181               	bcf	1,3	;volatile
   313     0020                     l606:
   314                           
   315                           ;main.c: 33:     PS0 = 0;
   316     0020  1001               	bcf	1,0	;volatile
   317     0021                     l608:
   318                           
   319                           ;main.c: 34:     PS1 = 1;
   320     0021  1481               	bsf	1,1	;volatile
   321     0022                     l610:
   322                           
   323                           ;main.c: 35:     PS2 = 1;
   324     0022  1501               	bsf	1,2	;volatile
   325                           
   326                           ;main.c: 36:     TMR0 = 255-255;
   327     0023  1283               	bcf	3,5	;RP0=0, select bank0
   328     0024  1303               	bcf	3,6	;RP1=0, select bank0
   329     0025  0181               	clrf	1	;volatile
   330     0026                     l33:
   331     0026  0008               	return
   332     0027                     __end_of_initialize:
   333                           
   334                           	psect	text2
   335     0027                     __ptext2:	
   336 ;; *************** function _isr *****************
   337 ;; Defined at:
   338 ;;		line 48 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   352 ;;      Params:         0       0       0       0
   353 ;;      Locals:         0       0       0       0
   354 ;;      Temps:          2       0       0       0
   355 ;;      Totals:         2       0       0       0
   356 ;;Total ram usage:        2 bytes
   357 ;; Hardware stack levels used: 1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		Interrupt level 1
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365     0027                     _isr:	
   366                           ;psect for function _isr
   367                           
   368     0027                     i1l614:
   369                           
   370                           ;main.c: 51:     if (T0IF){
   371     0027  1D0B               	btfss	11,2	;volatile
   372     0028  282A               	goto	u1_21
   373     0029  282B               	goto	u1_20
   374     002A                     u1_21:
   375     002A  2836               	goto	i1l626
   376     002B                     u1_20:
   377     002B                     i1l616:
   378                           
   379                           ;main.c: 52:         GIE = 0;
   380     002B  138B               	bcf	11,7	;volatile
   381                           
   382                           ;main.c: 53:         T0IE = 0;
   383     002C  128B               	bcf	11,5	;volatile
   384                           
   385                           ;main.c: 54:         T0IF = 0;
   386     002D  110B               	bcf	11,2	;volatile
   387     002E                     i1l618:
   388                           
   389                           ;main.c: 56:         PORTB=PORTA;
   390     002E  1283               	bcf	3,5	;RP0=0, select bank0
   391     002F  1303               	bcf	3,6	;RP1=0, select bank0
   392     0030  0805               	movf	5,w	;volatile
   393     0031  0086               	movwf	6	;volatile
   394     0032                     i1l620:
   395                           
   396                           ;main.c: 62:         TMR0 = 255-255;
   397     0032  0181               	clrf	1	;volatile
   398     0033                     i1l622:
   399                           
   400                           ;main.c: 63:         GIE = 1;
   401     0033  178B               	bsf	11,7	;volatile
   402     0034                     i1l624:
   403                           
   404                           ;main.c: 64:         T0IE = 1;
   405     0034  168B               	bsf	11,5	;volatile
   406                           
   407                           ;main.c: 66:     }else{
   408     0035  2838               	goto	i1l48
   409     0036                     i1l626:
   410                           
   411                           ;main.c: 68:         pwmCounter=0;
   412     0036  01F0               	clrf	_pwmCounter
   413     0037  01F1               	clrf	_pwmCounter+1
   414     0038                     i1l48:
   415     0038  0873               	movf	??_isr+1,w
   416     0039  008A               	movwf	10
   417     003A  0E72               	swapf	??_isr,w
   418     003B  0083               	movwf	3
   419     003C  0EFE               	swapf	btemp,f
   420     003D  0E7E               	swapf	btemp,w
   421     003E  0009               	retfie
   422     003F                     __end_of_isr:
   423     007E                     btemp	set	126	;btemp
   424     007E                     wtemp0	set	126
   425                           
   426                           	psect	intentry
   427     0004                     __pintentry:	
   428                           ;incstack = 0
   429                           ; Regs used in _isr: [wreg+status,2]
   430                           
   431     0004                     interrupt_function:
   432     007E                     saved_w	set	btemp
   433     0004  00FE               	movwf	btemp
   434     0005  0E03               	swapf	3,w
   435     0006  00F2               	movwf	??_isr
   436     0007  080A               	movf	10,w
   437     0008  00F3               	movwf	??_isr+1
   438     0009  2827               	ljmp	_isr
   439                           
   440                           	psect	config
   441                           
   442                           ;Config register CONFIG @ 0x2007
   443                           ;	Oscillator Selection bits
   444                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   445                           ;	Watchdog Timer Enable bit
   446                           ;	WDTE = OFF, WDT disabled
   447                           ;	Power-up Timer Enable bit
   448                           ;	PWRTE = OFF, PWRT disabled
   449                           ;	RA5/MCLR/VPP Pin Function Select bit
   450                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   451                           ;	Brown-out Detect Enable bit
   452                           ;	BOREN = OFF, BOD disabled
   453                           ;	Low-Voltage Programming Enable bit
   454                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   455                           ;	Data EE Memory Code Protection bit
   456                           ;	CPD = OFF, Data memory code protection off
   457                           ;	Flash Program Memory Code Protection bit
   458                           ;	CP = OFF, Code protection off
   459     2007                     	org	8199
   460     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       4      10        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 07 21:52:48 2024

                     l33 0026                       l38 0040                       l39 0040  
                    l600 001B                      l610 0022                      l602 001C  
                    l604 001F                      l612 003F                      l606 0020  
                    l608 0021                      l592 000F                      l594 0013  
                    l596 0014                      l598 001A                      _GIE 005F  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _PSA 040B                      _isr 0027                     ?_isr 0072  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   i1l48 0038                     _TMR0 0001                     u1_20 002B  
                   u1_21 002A                     _main 003F                     btemp 007E  
                   start 000A                    ??_isr 0072                    ?_main 0072  
                  _CMCON 001F                    i1l620 0032                    i1l622 0033  
                  i1l614 0027                    i1l624 0034                    i1l616 002B  
                  i1l618 002E                    i1l626 0036                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0042                   ??_main 0074  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0072  
             __pmaintext 003F               __pintentry 0004               _initialize 000F  
                __ptext1 000F                  __ptext2 0027     end_of_initialization 000D  
             _pwmCounter 0070              ?_initialize 0072      start_initialization 000B  
            __end_of_isr 003F              __pbssCOMMON 0070                ___latbits 0000  
      interrupt_function 0004             ??_initialize 0074       __end_of_initialize 0027  
               intlevel1 0000  
